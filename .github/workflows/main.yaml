name: Building Images
on:
  push:
    branches:
      - production

jobs:
  pre-compile:
    name: Pre-Compile Assets
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends build-essential
      - name: Install brotli
        run: |
          git clone https://github.com/google/brotli.git /tmp/brotli
          cd /tmp/brotli
          mkdir out
          cd out
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=./installed ..
          cmake --build . --config Release --target install
          sudo cp installed/bin/brotli /usr/local/bin/
          rm -rf /tmp/brotli/
      - name: Build Prep-Image and Creating Assets
        run: |
          docker build . -f Dockerfile.slim-buster -t prep-image
          docker run -e RAILS_ENV=production -e OTP_SECRET=precompile_placeholder -e SECRET_KEY_BASE=precompile_placeholder -e SENTRY_DSN=precompile_placeholder --name prep-container prep-image bundle exec rake assets:precompile
      - name: Compress Assets
        run: |
          docker cp prep-container:/mastodon/public .
          find ./public/assets -name "*.js" -or -name "*.css" | xargs -t brotli -q 10
          find ./public/packs -name "*.js" -or -name "*.css" -or -name "*.svg" -or -name "*.ttf" -or -name "*.eot" | xargs -t brotli -q 10
      - name: Build proxy image
        run: |
          docker build . -f Dockerfile.proxy -t ${{secrets.REGISTORY_PATH}}/mastodon-proxy:latest-amd64
          docker tag ${{secrets.REGISTORY_PATH}}/mastodon-proxy:latest-amd64 ${{secrets.REGISTORY_PATH}}/mastodon-proxy:$(echo ${GITHUB_SHA}|head -c7)-amd64
      - name: Build mastodon image
        run: |
          docker build . -f Dockerfile.slim-buster -t ${{secrets.REGISTORY_PATH}}/mastodon:latest-amd64
          docker tag ${{secrets.REGISTORY_PATH}}/mastodon:latest-amd64 ${{secrets.REGISTORY_PATH}}/mastodon:$(echo ${GITHUB_SHA}|head -c7)-amd64
      - name: Upload image
        run: |
          docker login -u ${{secrets.REGISTORY_USER}} -p ${{secrets.REGISTORY_PASS}}
          docker push ${{secrets.REGISTORY_PATH}}/mastodon:latest-amd64
          docker push ${{secrets.REGISTORY_PATH}}/mastodon:$(echo ${GITHUB_SHA}|head -c7)-amd64
          docker push ${{secrets.REGISTORY_PATH}}/mastodon-proxy:latest-amd64
          docker push ${{secrets.REGISTORY_PATH}}/mastodon-proxy:$(echo ${GITHUB_SHA}|head -c7)-amd64
