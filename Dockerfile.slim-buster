FROM debian:buster AS jemalloc

ENV JEMALLOC_VER 5.2.0

RUN mkdir /rootfs

RUN apt-get update && \
    apt-get -y install --no-install-recommends build-essential bzip2 ca-certificates curl && \
    curl -L https://github.com/jemalloc/jemalloc/releases/download/$JEMALLOC_VER/jemalloc-$JEMALLOC_VER.tar.bz2 | tar jx && \
    cd jemalloc-$JEMALLOC_VER && \
    ./configure --prefix=/rootfs && \
    make -j$(getconf _NPROCESSORS_ONLN) && \
    make install

FROM ruby:2.6-slim-buster

LABEL maintainer="https://github.com/tootsuite/mastodon" \
    description="Your self-hosted, globally interconnected microblogging community"

ARG UID=991
ARG GID=991

ENV RAILS_SERVE_STATIC_FILES=true \
    RAILS_ENV=production NODE_ENV=production

EXPOSE 3000 4000

COPY --from=jemalloc /rootfs /

WORKDIR /mastodon

COPY Gemfile Gemfile.lock package.json yarn.lock .yarnclean /mastodon/

RUN apt-get update \
    && apt-get -y install --no-install-recommends curl gnupg2 \
    && curl -sL https://deb.nodesource.com/setup_10.x | bash - \
    && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
    && echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list \
    && apt-get update \
    && apt-get -y install --no-install-recommends build-essential git libicu-dev libidn11-dev libtool libpq-dev libprotobuf-dev python \
    && apt-get -y install --no-install-recommends ca-certificates ffmpeg file libicu63 imagemagick libidn11 libpq5 libprotobuf17 openssl protobuf-compiler tzdata wget nodejs yarn \
    && gem install passenger \
    && passenger-config build-native-support \
    && bundle install -j$(getconf _NPROCESSORS_ONLN) --deployment --without test development \
    && yarn --pure-lockfile \
    && yarn cache clean \
    && apt-get -y remove --purge curl gnupg2 build-essential git libicu-dev libidn11-dev libtool libpq-dev libprotobuf-dev python \
    && apt-get -y autoremove --purge \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN groupadd -g ${GID} mastodon && useradd -d /mastodon -s /bin/sh -g mastodon -u ${UID} mastodon \
    && mkdir -p /mastodon/public/system /mastodon/public/assets /mastodon/public/packs \
    && chown mastodon:mastodon /mastodon \
    && chown -R mastodon:mastodon /mastodon/public

COPY --chown=mastodon:mastodon . /mastodon

VOLUME /mastodon/public/system /mastodon/public/assets /mastodon/public/packs

USER mastodon
