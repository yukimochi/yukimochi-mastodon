version: 2
jobs:
  assets-precompile:
    working_directory: /mastodon
    docker:
      - image: yukimochi/mastodon-assets-precompiler
    steps:
      - run:
          name: Add Remote Repository
          command: |
            git config --global url."https://github.com/".insteadOf "git@github.com:"
            git remote add ykmc ${CIRCLE_REPOSITORY_URL}
            git fetch --force ykmc
            git reset --hard ${CIRCLE_SHA1}
      - run:
          name: Resetup Dependencies
          command: |
            bundle install --deployment --without test development
            yarn --pure-lockfile
            yarn cache clean
      - run:
          name: Creating assets
          command: |
            cp .env.production.sample .env.production
            OTP_SECRET=precompile_placeholder SECRET_KEY_BASE=precompile_placeholder SENTRY_DSN=precompile_placeholder bundle exec rake assets:precompile
            find ./public/assets -name "*.js" -or -name "*.css" | xargs -t brotli -q 10
            find ./public/packs -name "*.js" -or -name "*.css" -or -name "*.svg" -or -name "*.ttf" -or -name "*.eot" | xargs -t brotli -q 10
            tar cfz ~/assets-${CIRCLE_SHA1}.tar.gz public/assets public/packs
            cp ~/assets-${CIRCLE_SHA1}.tar.gz /assets.tar.gz
      - persist_to_workspace:
          root: /
          paths:
            - assets.tar.gz

  build-image:
    docker:
      - image: docker:git
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/project/
      - run:
          name: build proxy image
          command: |
            docker build . -f Dockerfile.proxy -t ${REGISTORY_PATH}/mastodon:proxy-amd64
            docker tag ${REGISTORY_PATH}/mastodon:proxy-amd64 ${REGISTORY_PATH}/mastodon:proxy-$(echo ${CIRCLE_SHA1}|head -c7)-amd64
      - run:
          name: extract assets
          command: |
            tar fx assets.tar.gz
            rm assets.tar.gz
      - run:
          name: build mastodon image
          command: |
            docker build . -f Dockerfile.slim-buster -t ${REGISTORY_PATH}/mastodon:latest-amd64
            docker tag ${REGISTORY_PATH}/mastodon:latest-amd64 ${REGISTORY_PATH}/mastodon:$(echo ${CIRCLE_SHA1}|head -c7)-amd64
      - run:
          name: upload image
          command: |
            docker login ${REGISTORY_PATH} -u ${REGISTORY_USER} -p ${REGISTORY_PASS}
            docker push ${REGISTORY_PATH}/mastodon:latest-amd64
            docker push ${REGISTORY_PATH}/mastodon:$(echo ${CIRCLE_SHA1}|head -c7)-amd64
            docker push ${REGISTORY_PATH}/mastodon:proxy-amd64
            docker push ${REGISTORY_PATH}/mastodon:proxy-$(echo ${CIRCLE_SHA1}|head -c7)-amd64

workflows:
  version: 2
  build:
    jobs:
      - assets-precompile
      - build-image:
          requires:
            - assets-precompile
