version: 2
jobs:
  assets-precompile:
    working_directory: /mastodon
    docker:
      - image: yukimochi/mastodon-assets-precompiler
    steps:
      - run:
          name: Add Remote Repository
          command: |
            git config --global url."https://github.com/".insteadOf "git@github.com:"
            git remote add ykmc ${CIRCLE_REPOSITORY_URL}
            git fetch --force ykmc
            git reset --hard ${CIRCLE_SHA1}
      - run:
          name: Resetup Dependencies
          command: |
            bundle install --deployment --without test development
            yarn --pure-lockfile
            yarn cache clean
      - run:
          name: Creating assets
          command: |
            cp .env.production.sample .env.production
            OTP_SECRET=precompile_placeholder SECRET_KEY_BASE=precompile_placeholder SENTRY_DSN=precompile_placeholder bundle exec rake assets:precompile
            find ./public/assets -name "*.js" -or -name "*.css" | xargs -t brotli -q 10
            find ./public/packs -name "*.js" -or -name "*.css" -or -name "*.svg" -or -name "*.ttf" -or -name "*.eot" | xargs -t brotli -q 10
            tar cfz ~/assets-${CIRCLE_SHA1}.tar.gz public/assets public/packs
      - run:
          name: Send assets s3
          command: |
            mc config host add --api ${s3_apiver} ykmc ${s3_endpoint} ${s3_accesskey} ${s3_secretkey}
            mc cp ~/assets-${CIRCLE_SHA1}.tar.gz ${backet}/${CIRCLE_BRANCH}/

  build-image:
    docker:
      - image: docker:git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build image
          command: |
            docker build . -f Dockerfile.slim-buster -t yukimochi/mastodon:latest-amd64
            docker tag yukimochi/mastodon:latest-amd64 yukimochi/mastodon:$(echo ${CIRCLE_SHA1}|head -c7)-amd64
            docker login --username=${DOCKER_USER} --password=${DOCKER_PASS}
            docker push yukimochi/mastodon:latest-amd64
            docker push yukimochi/mastodon:$(echo ${CIRCLE_SHA1}|head -c7)-amd64

  push-manifest:
    docker:
      - image: docker:git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build image
          command: |
            wget https://github.com/estesp/manifest-tool/releases/download/v0.7.0/manifest-tool-linux-amd64 -O /usr/bin/manifest-tool
            chmod +x /usr/bin/manifest-tool
            docker login --username=${DOCKER_USER} --password=${DOCKER_PASS}
            manifest-tool push from-spec manifest.yaml
    
workflows:
  version: 2
  build:
    jobs:
      - assets-precompile
      - build-image
      - push-manifest:
          requires:
            - build-image
